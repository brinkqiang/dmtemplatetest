cmake_minimum_required(VERSION 3.2)

PROJECT(dmtemplate)

LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
INCLUDE(cmake/ModuleImport.cmake)
INCLUDE(cmake/ModuleCompileOptions.cmake)
ModuleSetCompileOptions()

SET(DMTEMPLATE_VERSION_MAJOR "1")
SET(DMTEMPLATE_VERSION_MINOR "0")
SET(DMTEMPLATE_VERSION_PATCH "1")
SET(DMTEMPLATE_VERSION "${DMTEMPLATE_VERSION_MAJOR}.${DMTEMPLATE_VERSION_MINOR}.${DMTEMPLATE_VERSION_PATCH}")

MESSAGE(STATUS "VERSION: ${DMTEMPLATE_VERSION}")

ADD_DEFINITIONS(-DUSE_DMTEMPLATE)

ModuleImport("dmlog" "thirdparty/dmlog")

IF (WIN32)
    INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/windows)
ENDIF(WIN32)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/test)

LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/lib)

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/lib)

FILE(GLOB_RECURSE DMTEMPLATE_SOURCES
${CMAKE_CURRENT_SOURCE_DIR}/include/*.hpp
${CMAKE_CURRENT_SOURCE_DIR}/include/*.h

${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp
${CMAKE_CURRENT_SOURCE_DIR}/src/*.cc
${CMAKE_CURRENT_SOURCE_DIR}/src/*.c
${CMAKE_CURRENT_SOURCE_DIR}/src/*.hpp
${CMAKE_CURRENT_SOURCE_DIR}/src/*.h
)

IF (WIN32)
    LIST(APPEND DMTEMPLATE_SOURCES)
ENDIF(WIN32)

FILE(GLOB_RECURSE DMTEMPLATETEST_SOURCES
${CMAKE_CURRENT_SOURCE_DIR}/test/*.cpp
${CMAKE_CURRENT_SOURCE_DIR}/test/*.cc
${CMAKE_CURRENT_SOURCE_DIR}/test/*.c
${CMAKE_CURRENT_SOURCE_DIR}/test/*.hpp
${CMAKE_CURRENT_SOURCE_DIR}/test/*.h)

IF (WIN32)
    ADD_LIBRARY(dmtemplate STATIC ${DMTEMPLATE_SOURCES})
    ADD_EXECUTABLE(dmtemplatetest ${DMTEMPLATETEST_SOURCES})
    TARGET_LINK_LIBRARIES(dmtemplatetest dmtemplate)
ELSEIF (APPLE)
    ADD_LIBRARY(dmtemplate STATIC ${DMTEMPLATE_SOURCES})
    ADD_EXECUTABLE(dmtemplatetest ${DMTEMPLATETEST_SOURCES})
    TARGET_LINK_LIBRARIES(dmtemplatetest dmtemplate)
ELSEIF (UNIX)
    ADD_LIBRARY(dmtemplate STATIC ${DMTEMPLATE_SOURCES})
    ADD_EXECUTABLE(dmtemplatetest ${DMTEMPLATETEST_SOURCES})
    TARGET_LINK_LIBRARIES(dmtemplatetest dmtemplate)
ENDIF ()

#ADD_CUSTOM_COMMAND(
#TARGET dmtemplatetest
#PRE_BUILD
#COMMAND ${CMAKE_COMMAND} -E copy_if_different
#${CMAKE_CURRENT_SOURCE_DIR}/config/test.csv
#$<TARGET_FILE_DIR:dmtemplatetest>
#)

#INSTALL(DIRECTORY include/ DESTINATION include)
#INSTALL(TARGETS dmtemplate
#        RUNTIME DESTINATION bin
#        LIBRARY DESTINATION lib
#        ARCHIVE DESTINATION lib)

#SET(DMTEMPLATE_LIBS "dmtemplate")
#MARK_AS_ADVANCED(${DMTEMPLATE_LIBS})